name: Create draft release

on:
  push:
    branches: ["**-prerelease"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      # This bash script returns the `tag` name for the release. Will match "/refs/[tags/heads]/[tag]-prerelease"
      - name: Parse `tag`
        id: prerelease-tag
        shell: bash
        run: |
          echo ::set-output name=tag::$(node -e "console.log('${{ github.ref }}'.match(/^.*\/(.+)-prerelease$/)[1])")

      # This bash script returns 0 if equal and 1 otherwise. Will fail if versions are not equal.
      - name: Check `tag` against `lerna.json.version`
        shell: bash
        run: |
          [ "${{ steps.prerelease-tag.outputs.tag }}" == "$(node -e "console.log(require('./lerna.json').version);")" ]

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.prerelease-tag.outputs.tag }}
          release_name: ${{ steps.prerelease-tag.outputs.tag }}
          draft: true
          prerelease: true

      # This bash script will set an output for this step. It can be used with steps.version.outputs.version
      - name: Output version
        id: version
        run: echo ::set-output name=version::$(node -e "console.log(require('./lerna.json').version);")
        shell: bash

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12.16.3

      - name: Setup Yarn
        run: npm install -g yarn@1.19.1

      - name: Start Xvfb
        run: /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: "Build and pack"
        run: yarn bootstrap && yarn pack-vscode:all
        env:
          DISPLAY: ":99.0"

      - name: Upload BPMN Editor Extension
        id: upload-bpmn-extension
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: vscode_extension_bpmn_editor_${{ steps.version.outputs.version }}.vsix
          asset_path: ./packages/vscode-extension-bpmn-editor/dist/vscode_extension_bpmn_editor_${{ steps.version.outputs.version }}.vsix
          asset_content_type: application/zip

      - name: Upload DMN Editor Extension
        id: upload-dmn-extension
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: vscode_extension_dmn_editor_${{ steps.version.outputs.version }}.vsix
          asset_path: ./packages/vscode-extension-dmn-editor/dist/vscode_extension_dmn_editor_${{ steps.version.outputs.version }}.vsix
          asset_content_type: application/zip

      - name: Upload PMML Editor Extension
        id: upload-pmml-extension
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: vscode_extension_pmml_editor_${{ steps.version.outputs.version }}.vsix
          asset_path: ./packages/vscode-extension-pmml-editor/dist/vscode_extension_pmml_editor_${{ steps.version.outputs.version }}.vsix
          asset_content_type: application/zip

      - name: Upload Kogito Bundle Extension
        id: upload-kogito-bundle-extension
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: vscode_extension_kogito_bundle_${{ steps.version.outputs.version }}.vsix
          asset_path: ./packages/vscode-extension-kogito-bundle/dist/vscode_extension_kogito_bundle_${{ steps.version.outputs.version }}.vsix
          asset_content_type: application/zip

      - name: Upload Red Hat Business Automation Bundle Extension
        id: upload-red-hat-business-automation-bundle-extension
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: vscode_extension_red_hat_business_automation_bundle_${{ steps.version.outputs.version }}.vsix
          asset_path: ./packages/vscode-extension-red-hat-business-automation-bundle/dist/vscode_extension_red_hat_business_automation_bundle_${{ steps.version.outputs.version }}.vsix
          asset_content_type: application/zip
